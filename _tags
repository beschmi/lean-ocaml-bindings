# OASIS_START
# DO NOT EDIT (digest: 8b0500ec615d949d748cde1a8ac80a21)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library lean_bindings
"bindings/lean_bindings.cmxs": use_lean_bindings
<bindings/lean_bindings.{cma,cmxa}>: oasis_library_lean_bindings_byte
<bindings/*.ml{,i,y}>: oasis_library_lean_bindings_byte
<bindings/lean_bindings.{cma,cmxa}>: oasis_library_lean_bindings_native
<bindings/*.ml{,i,y}>: oasis_library_lean_bindings_native
<bindings/*.ml{,i,y}>: pkg_ctypes
<bindings/*.ml{,i,y}>: pkg_ctypes.foreign
<bindings/*.ml{,i,y}>: pkg_ctypes.stubs
# Library lean
"lib/lean.cmxs": use_lean
<lib/*.ml{,i,y}>: oasis_library_lean_ccopt
"lib/ffi_generated_stubs.c": oasis_library_lean_ccopt
<lib/lean.{cma,cmxa}>: oasis_library_lean_cclib
"lib/liblean_stubs.lib": oasis_library_lean_cclib
"lib/dlllean_stubs.dll": oasis_library_lean_cclib
"lib/liblean_stubs.a": oasis_library_lean_cclib
"lib/dlllean_stubs.so": oasis_library_lean_cclib
<lib/lean.{cma,cmxa}>: oasis_library_lean_byte
<lib/*.ml{,i,y}>: oasis_library_lean_byte
"lib/ffi_generated_stubs.c": oasis_library_lean_byte
<lib/lean.{cma,cmxa}>: oasis_library_lean_native
<lib/*.ml{,i,y}>: oasis_library_lean_native
"lib/ffi_generated_stubs.c": oasis_library_lean_native
<lib/lean.{cma,cmxa}>: use_liblean_stubs
<lib/*.ml{,i,y}>: pkg_ctypes
<lib/*.ml{,i,y}>: pkg_ctypes.foreign
<lib/*.ml{,i,y}>: pkg_ctypes.stubs
<lib/*.ml{,i,y}>: use_lean_bindings
"lib/ffi_generated_stubs.c": pkg_ctypes
"lib/ffi_generated_stubs.c": pkg_ctypes.foreign
"lib/ffi_generated_stubs.c": pkg_ctypes.stubs
"lib/ffi_generated_stubs.c": use_lean_bindings
# Executable ffi_stubgen
"stubgen/ffi_stubgen.byte": oasis_executable_ffi_stubgen_byte
<stubgen/*.ml{,i,y}>: oasis_executable_ffi_stubgen_byte
"stubgen/ffi_stubgen.byte": oasis_executable_ffi_stubgen_native
<stubgen/*.ml{,i,y}>: oasis_executable_ffi_stubgen_native
"stubgen/ffi_stubgen.byte": pkg_ctypes
"stubgen/ffi_stubgen.byte": pkg_ctypes.foreign
"stubgen/ffi_stubgen.byte": pkg_ctypes.stubs
"stubgen/ffi_stubgen.byte": use_lean_bindings
# Executable ffi_types_stubgen
"stubgen/ffi_types_stubgen.byte": oasis_executable_ffi_types_stubgen_byte
<stubgen/*.ml{,i,y}>: oasis_executable_ffi_types_stubgen_byte
"stubgen/ffi_types_stubgen.byte": oasis_executable_ffi_types_stubgen_native
<stubgen/*.ml{,i,y}>: oasis_executable_ffi_types_stubgen_native
"stubgen/ffi_types_stubgen.byte": pkg_ctypes
"stubgen/ffi_types_stubgen.byte": pkg_ctypes.foreign
"stubgen/ffi_types_stubgen.byte": pkg_ctypes.stubs
"stubgen/ffi_types_stubgen.byte": use_lean_bindings
<stubgen/*.ml{,i,y}>: pkg_ctypes
<stubgen/*.ml{,i,y}>: pkg_ctypes.foreign
<stubgen/*.ml{,i,y}>: pkg_ctypes.stubs
<stubgen/*.ml{,i,y}>: use_lean_bindings
# Executable test_lean
<lib_test/test_lean.{native,byte}>: oasis_executable_test_lean_byte
<lib_test/*.ml{,i,y}>: oasis_executable_test_lean_byte
<lib_test/test_lean.{native,byte}>: oasis_executable_test_lean_native
<lib_test/*.ml{,i,y}>: oasis_executable_test_lean_native
<lib_test/test_lean.{native,byte}>: pkg_ctypes
<lib_test/test_lean.{native,byte}>: pkg_ctypes.foreign
<lib_test/test_lean.{native,byte}>: pkg_ctypes.stubs
<lib_test/test_lean.{native,byte}>: pkg_oUnit
<lib_test/test_lean.{native,byte}>: use_lean
<lib_test/test_lean.{native,byte}>: use_lean_bindings
<lib_test/*.ml{,i,y}>: pkg_ctypes
<lib_test/*.ml{,i,y}>: pkg_ctypes.foreign
<lib_test/*.ml{,i,y}>: pkg_ctypes.stubs
<lib_test/*.ml{,i,y}>: pkg_oUnit
<lib_test/*.ml{,i,y}>: use_lean
<lib_test/*.ml{,i,y}>: use_lean_bindings
# OASIS_STOP
<*/*> : pkg_ctypes
<*/*> : pkg_ctypes.foreign
<*/*> : pkg_ctypes.stubs
